#!/usr/bin/env python3
"""
Script to seed default story categories
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from core.core.database import SessionLocal
from story.crud import create_category
from story.schemas import StoryCategoryCreate

def seed_categories():
    """Seed default story categories"""
    db = SessionLocal()
    
    default_categories = [
        {
            "name": "Tin t·ª©c",
            "description": "C√°c b√†i vi·∫øt tin t·ª©c chung"
        },
        {
            "name": "B√°o c√°o",
            "description": "C√°c b√°o c√°o v√† ph√¢n t√≠ch"
        },
        {
            "name": "Tuy·ªÉn d·ª•ng",
            "description": "Th√¥ng tin tuy·ªÉn d·ª•ng v√† vi·ªác l√†m"
        },
        {
            "name": "H∆∞·ªõng d·∫´n",
            "description": "C√°c b√†i h∆∞·ªõng d·∫´n v√† tutorial"
        },
        {
            "name": "C√¥ng ngh·ªá",
            "description": "Tin t·ª©c v√† b√†i vi·∫øt v·ªÅ c√¥ng ngh·ªá"
        }
    ]
    
    try:
        for category_data in default_categories:
            try:
                category = StoryCategoryCreate(**category_data)
                create_category(db, category)
                print(f"‚úÖ Created category: {category_data['name']}")
            except Exception as e:
                print(f"‚ö†Ô∏è  Category {category_data['name']} might already exist: {str(e)}")
        
        print("üéâ Categories seeding completed!")
        
    except Exception as e:
        print(f"‚ùå Error seeding categories: {str(e)}")
    finally:
        db.close()

if __name__ == "__main__":
    seed_categories() 